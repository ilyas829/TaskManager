name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # No caching to avoid path issues
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm install
    
    - name: Run backend tests
      working-directory: ./backend
      run: npm test

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false --passWithNoTests
    
    - name: Ensure index.html exists
      working-directory: ./frontend/public
      run: test -f index.html || (echo "<!DOCTYPE html><html><head><title>React App</title></head><body><div id='root'></div></body></html>" > index.html)

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  ui-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Python dependencies
      run: pip install -r tests/requirements.txt
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm install
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install
    
    - name: Start backend server
      working-directory: ./backend
      run: |
        npm start &
        sleep 15
    
    - name: Build and start frontend
      working-directory: ./frontend
      run: |
        npm run build
        npx serve -s build -l 3000 &
        sleep 10
    
    - name: Run UI tests
      env:
        HEADLESS: true
        FRONTEND_URL: http://localhost:3000
      run: |
        python -m pytest tests/ui_tests.py -v --tb=short
